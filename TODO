separate config file for a crossbuild host
CONFIG FRICTION:
	circuit configs are user specific since they contain hardcoded absolute paths

------------------------------------------
anchor graveyard
	anchor file system graveyard
	find dead workers in graveyard
	use new worker to pass file
zombie detect/kill mechanism (procs not in anchor fs)
	add hidden flat registration space for runtime IDS in anchor file system
	add permanent flat registration space, where workers check in and out
____________________________________________________
Ref -> Tele XVal (ExportValue)?
4lsof (list registered listeners, etc. resources) and also dup the lsof of the unix process
__________________________________________
POST OPEN-SOURCE

A newly started worker would get its job from an incoming "Go" call. This call
also defines the death semantics for this worker. If this call doesn't arrive
for a network or type-mismatch reason, the worker should die on its own after
waiting for a "Go" call for a bit.

4build: optionally use existing go installation
4crossbuild: takeover upload to hosts?
add method for gob registration of types in circuit (use custom circuit type names?)

reconnect mechanism
	design of network partition resilience:
		â€”> when disconnect is noticed, worker reports to a central admin
		database that they are experiencing a network partition
		-> worker does not give up redials until admin explicitly declares
		connection dead

mechanism whereby if a runtime dies PREMATURELY, all child/descendant runtimes
(i.e. runtimes spawned at the root by that runtime) are killed. Mimics
goroutine mutual semantics.

circuit-friendly stack traces
lockfiles in durable file system to ensure no race-conditions on state changes
add issue locking in issue file system for concurrency safety

garbage collect empty dirs in durable
	tool to list all files and clear them, etc.

advanced rate-limiter
topic-specific subscriptions
