spam issue track deployment
4cpu

??? tool to fetch out/err of successfully-started runtimes
4doc
____________________________________________________

4lsof (list registered listeners, etc. resources)
4stat, 4watch(anchor)
zombie detect/kill mechanism (procs not in anchor fs)
	add hidden flat registration space for runtime IDS in anchor file system
	add permanent flat registration space, where workers check in and out

__________________________________________________________
live display of cpu utilization on all hosts
display consoles, when how?

__________________________________________________________
OPEN-SOURCE

manual
godoc online

__________________________________________
POST OPEN-SOURCE

4xb takeover upload to hosts?
add method for gob registration of types in circuit (use custom circuit type names?)

reconnect mechanism
	design of network partition resilience:
		â€”> when disconnect is noticed, worker reports to a central admin
		database that they are experiencing a network partition
		-> worker does not give up redials until admin explicitly declares
		connection dead

mechanism whereby if a runtime dies PREMATURELY, all child/descendant runtimes
(i.e. runtimes spawned at the root by that runtime) are killed. Mimics
goroutine mutual semantics.

circuit-friendly stack traces
lockfiles in durable file system to ensure no race-conditions on state changes
add issue locking in issue file system for concurrency safety

garbage collect empty dirs in durable
	tool to list all files and clear them, etc.

advanced rate-limiter
